import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import Icon from '@/components/ui/icon';

interface Recipe {
  id: number;
  title: string;
  image: string;
  time: number;
  difficulty: 'easy' | 'medium' | 'hard';
  category: string;
  ingredients: string[];
  steps: string[];
}

const recipes: Recipe[] = [
  {
    id: 1,
    title: '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞',
    image: 'https://cdn.poehali.dev/projects/adaaa3bd-20ee-426f-a572-c7374b6d9e74/files/fd638a00-e8e9-48ef-9db3-0d8e619990e1.jpg',
    time: 30,
    difficulty: 'medium',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞',
    ingredients: ['–°–ø–∞–≥–µ—Ç—Ç–∏ 400–≥', '–ë–µ–∫–æ–Ω 200–≥', '–Ø–π—Ü–∞ 4—à—Ç', '–ü–∞—Ä–º–µ–∑–∞–Ω 100–≥', '–ß–µ—Å–Ω–æ–∫ 2 –∑—É–±—á–∏–∫–∞', '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ', '–°–æ–ª—å, –ø–µ—Ä–µ—Ü'],
    steps: [
      '–û—Ç–≤–∞—Ä–∏—Ç–µ —Å–ø–∞–≥–µ—Ç—Ç–∏ –≤ –ø–æ–¥—Å–æ–ª–µ–Ω–Ω–æ–π –≤–æ–¥–µ –¥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–ª—å –¥–µ–Ω—Ç–µ',
      '–û–±–∂–∞—Ä—å—Ç–µ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–π –±–µ–∫–æ–Ω —Å —á–µ—Å–Ω–æ–∫–æ–º –¥–æ –∑–æ–ª–æ—Ç–∏—Å—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞',
      '–í–∑–±–µ–π—Ç–µ —è–π—Ü–∞ —Å —Ç–µ—Ä—Ç—ã–º –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º',
      '–°–º–µ—à–∞–π—Ç–µ –≥–æ—Ä—è—á—É—é –ø–∞—Å—Ç—É —Å –±–µ–∫–æ–Ω–æ–º –∏ —è–∏—á–Ω–æ–π —Å–º–µ—Å—å—é',
      '–ü–æ–¥–∞–≤–∞–π—Ç–µ —Å—Ä–∞–∑—É, –ø–æ—Å—ã–ø–∞–≤ –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º'
    ]
  },
  {
    id: 2,
    title: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç',
    image: 'https://cdn.poehali.dev/projects/adaaa3bd-20ee-426f-a572-c7374b6d9e74/files/c83a8873-5e04-4d04-8a45-5c44c47ad649.jpg',
    time: 90,
    difficulty: 'hard',
    category: '–î–µ—Å–µ—Ä—Ç—ã',
    ingredients: ['–ú—É–∫–∞ 200–≥', '–ö–∞–∫–∞–æ 50–≥', '–°–∞—Ö–∞—Ä 180–≥', '–Ø–π—Ü–∞ 3—à—Ç', '–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ 150–≥', '–†–∞–∑—Ä—ã—Ö–ª–∏—Ç–µ–ª—å 1—á.–ª.', '–Ø–≥–æ–¥—ã –¥–ª—è —É–∫—Ä–∞—à–µ–Ω–∏—è'],
    steps: [
      '–†–∞–∑–æ–≥—Ä–µ–π—Ç–µ –¥—É—Ö–æ–≤–∫—É –¥–æ 180¬∞C',
      '–°–º–µ—à–∞–π—Ç–µ —Å—É—Ö–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã',
      '–í–∑–±–µ–π—Ç–µ —è–π—Ü–∞ —Å —Å–∞—Ö–∞—Ä–æ–º –¥–æ –ø—ã—à–Ω–æ—Å—Ç–∏',
      '–°–æ–µ–¥–∏–Ω–∏—Ç–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤—ã–º–µ—à–∞–π—Ç–µ —Ç–µ—Å—Ç–æ',
      '–í—ã–ø–µ–∫–∞–π—Ç–µ 40-45 –º–∏–Ω—É—Ç',
      '–£–∫—Ä–∞—Å—å—Ç–µ —è–≥–æ–¥–∞–º–∏ –∏ —à–æ–∫–æ–ª–∞–¥–æ–º'
    ]
  },
  {
    id: 3,
    title: '–¢–æ—Å—Ç —Å –∞–≤–æ–∫–∞–¥–æ',
    image: 'https://cdn.poehali.dev/projects/adaaa3bd-20ee-426f-a572-c7374b6d9e74/files/2c15f40d-e98b-48ff-87af-9bf28fb6d480.jpg',
    time: 15,
    difficulty: 'easy',
    category: '–ó–∞–≤—Ç—Ä–∞–∫–∏',
    ingredients: ['–•–ª–µ–± —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π 2 –ª–æ–º—Ç–∏–∫–∞', '–ê–≤–æ–∫–∞–¥–æ 1—à—Ç', '–Ø–π—Ü–æ –ø–∞—à–æ—Ç 1—à—Ç', '–õ–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫', '–°–æ–ª—å, –ø–µ—Ä–µ—Ü', '–ö—É–Ω–∂—É—Ç'],
    steps: [
      '–ü–æ–¥—Å—É—à–∏—Ç–µ —Ö–ª–µ–± –≤ —Ç–æ—Å—Ç–µ—Ä–µ',
      '–†–∞–∑–æ–º–Ω–∏—Ç–µ –∞–≤–æ–∫–∞–¥–æ —Å –ª–∏–º–æ–Ω–Ω—ã–º —Å–æ–∫–æ–º',
      '–°–≤–∞—Ä–∏—Ç–µ —è–π—Ü–æ –ø–∞—à–æ—Ç',
      '–ù–∞–º–∞–∂—å—Ç–µ –∞–≤–æ–∫–∞–¥–æ –Ω–∞ —Ç–æ—Å—Ç',
      '–ü–æ–ª–æ–∂–∏—Ç–µ —è–π—Ü–æ —Å–≤–µ—Ä—Ö—É',
      '–ü–æ—Å—ã–ø—å—Ç–µ –∫—É–Ω–∂—É—Ç–æ–º –∏ —Å–ø–µ—Ü–∏—è–º–∏'
    ]
  }
];

const tips = [
  { id: 1, title: '–°–µ–∫—Ä–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ–π –ø–∞—Å—Ç—ã', text: '–î–æ–±–∞–≤—å—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –≤–æ–¥—ã –æ—Ç –≤–∞—Ä–∫–∏ –ø–∞—Å—Ç—ã –≤ —Å–æ—É—Å ‚Äî –∫—Ä–∞—Ö–º–∞–ª —Å–¥–µ–ª–∞–µ—Ç –µ–≥–æ –∫—Ä–µ–º–æ–æ–±—Ä–∞–∑–Ω—ã–º –∏ –ø–æ–º–æ–∂–µ—Ç —Å–æ—É—Å—É –ª—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å—Å—è –Ω–∞ –º–∞–∫–∞—Ä–æ–Ω–∞—Ö.' },
  { id: 2, title: '–°–æ—á–Ω–æ–µ –º—è—Å–æ', text: '–î–∞–π—Ç–µ –º—è—Å—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å 5-10 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è ‚Äî —Å–æ–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—Å—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –∏ –º—è—Å–æ —Å—Ç–∞–Ω–µ—Ç —Å–æ—á–Ω–µ–µ.' },
  { id: 3, title: '–ê—Ä–æ–º–∞—Ç–Ω–∞—è –≤—ã–ø–µ—á–∫–∞', text: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–Ω–∞—Ç–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∞ ‚Äî –æ–Ω–∏ –ª—É—á—à–µ —Å–º–µ—à–∏–≤–∞—é—Ç—Å—è –∏ –¥–∞—é—Ç –±–æ–ª–µ–µ –≤–æ–∑–¥—É—à–Ω—É—é —Ç–µ–∫—Å—Ç—É—Ä—É.' }
];

const Index = () => {
  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);
  const [timeFilter, setTimeFilter] = useState<string>('all');
  const [difficultyFilter, setDifficultyFilter] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState('');

  const filteredRecipes = recipes.filter(recipe => {
    const matchesTime = timeFilter === 'all' || 
      (timeFilter === '15' && recipe.time <= 15) ||
      (timeFilter === '30' && recipe.time <= 30) ||
      (timeFilter === '60' && recipe.time <= 60);
    
    const matchesDifficulty = difficultyFilter === 'all' || recipe.difficulty === difficultyFilter;
    const matchesSearch = recipe.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      recipe.ingredients.some(ing => ing.toLowerCase().includes(searchQuery.toLowerCase()));
    
    return matchesTime && matchesDifficulty && matchesSearch;
  });

  const getDifficultyColor = (difficulty: string) => {
    switch(difficulty) {
      case 'easy': return 'bg-green-500';
      case 'medium': return 'bg-yellow-500';
      case 'hard': return 'bg-red-500';
      default: return 'bg-gray-500';
    }
  };

  const getDifficultyText = (difficulty: string) => {
    switch(difficulty) {
      case 'easy': return '–õ–µ–≥–∫–æ';
      case 'medium': return '–°—Ä–µ–¥–Ω–µ';
      case 'hard': return '–°–ª–æ–∂–Ω–æ';
      default: return difficulty;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-white to-blue-50">
      <header className="bg-white/80 backdrop-blur-md shadow-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-3xl font-bold bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent">
              üç≥ –ö—É–ª–∏–Ω–∞—Ä–Ω–∞—è –∫–Ω–∏–≥–∞
            </h1>
            <nav className="hidden md:flex gap-6">
              <a href="#recipes" className="text-gray-700 hover:text-primary transition-colors font-medium">–†–µ—Ü–µ–ø—Ç—ã</a>
              <a href="#tips" className="text-gray-700 hover:text-primary transition-colors font-medium">–•–∏—Ç—Ä–æ—Å—Ç–∏</a>
            </nav>
          </div>
        </div>
      </header>

      <section className="py-20 px-4">
        <div className="container mx-auto">
          <div className="max-w-4xl mx-auto text-center animate-fade-in">
            <h2 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent">
              –ì–æ—Ç–æ–≤—å—Ç–µ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º
            </h2>
            <p className="text-xl text-gray-600 mb-8">
              –ü—Ä–æ—Å—Ç—ã–µ –∏ –≤–∫—É—Å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è. –û—Ç –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–≤—Ç—Ä–∞–∫–æ–≤ –¥–æ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã—Ö —É–∂–∏–Ω–æ–≤.
            </p>
            <Button size="lg" className="hover-scale text-lg px-8 py-6">
              <Icon name="ChefHat" size={24} className="mr-2" />
              –ù–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å
            </Button>
          </div>
        </div>
      </section>

      <section id="recipes" className="py-16 px-4">
        <div className="container mx-auto">
          <h2 className="text-4xl font-bold mb-8 text-center">–ù–∞—à–∏ —Ä–µ—Ü–µ–ø—Ç—ã</h2>
          
          <div className="max-w-5xl mx-auto mb-8 space-y-4">
            <div className="flex flex-col md:flex-row gap-4">
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="flex-1"
              />
            </div>
            
            <div className="flex flex-col sm:flex-row gap-4">
              <Select value={timeFilter} onValueChange={setTimeFilter}>
                <SelectTrigger className="w-full sm:w-[200px]">
                  <SelectValue placeholder="–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–õ—é–±–æ–µ –≤—Ä–µ–º—è</SelectItem>
                  <SelectItem value="15">–î–æ 15 –º–∏–Ω—É—Ç</SelectItem>
                  <SelectItem value="30">–î–æ 30 –º–∏–Ω—É—Ç</SelectItem>
                  <SelectItem value="60">–î–æ 1 —á–∞—Å–∞</SelectItem>
                </SelectContent>
              </Select>

              <Select value={difficultyFilter} onValueChange={setDifficultyFilter}>
                <SelectTrigger className="w-full sm:w-[200px]">
                  <SelectValue placeholder="–°–ª–æ–∂–Ω–æ—Å—Ç—å" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–õ—é–±–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å</SelectItem>
                  <SelectItem value="easy">–õ–µ–≥–∫–æ</SelectItem>
                  <SelectItem value="medium">–°—Ä–µ–¥–Ω–µ</SelectItem>
                  <SelectItem value="hard">–°–ª–æ–∂–Ω–æ</SelectItem>
                </SelectContent>
              </Select>

              {(timeFilter !== 'all' || difficultyFilter !== 'all' || searchQuery) && (
                <Button 
                  variant="outline" 
                  onClick={() => {
                    setTimeFilter('all');
                    setDifficultyFilter('all');
                    setSearchQuery('');
                  }}
                >
                  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </Button>
              )}
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            {filteredRecipes.map((recipe, index) => (
              <Card 
                key={recipe.id} 
                className="overflow-hidden hover-scale cursor-pointer animate-fade-in"
                style={{ animationDelay: `${index * 0.1}s` }}
                onClick={() => setSelectedRecipe(recipe)}
              >
                <div className="relative h-64 overflow-hidden">
                  <img 
                    src={recipe.image} 
                    alt={recipe.title}
                    className="w-full h-full object-cover transition-transform duration-500 hover:scale-110"
                  />
                  <div className="absolute top-4 right-4">
                    <Badge className={`${getDifficultyColor(recipe.difficulty)} text-white`}>
                      {getDifficultyText(recipe.difficulty)}
                    </Badge>
                  </div>
                </div>
                <div className="p-6">
                  <h3 className="text-2xl font-bold mb-3">{recipe.title}</h3>
                  <div className="flex items-center gap-4 text-sm text-gray-600">
                    <span className="flex items-center gap-1">
                      <Icon name="Clock" size={16} />
                      {recipe.time} –º–∏–Ω
                    </span>
                    <Badge variant="secondary">{recipe.category}</Badge>
                  </div>
                </div>
              </Card>
            ))}
          </div>

          {filteredRecipes.length === 0 && (
            <div className="text-center py-12">
              <Icon name="SearchX" size={48} className="mx-auto mb-4 text-gray-400" />
              <p className="text-xl text-gray-600">–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.</p>
            </div>
          )}
        </div>
      </section>

      {selectedRecipe && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in" onClick={() => setSelectedRecipe(null)}>
          <Card className="max-w-3xl w-full max-h-[90vh] overflow-y-auto animate-scale-in" onClick={(e) => e.stopPropagation()}>
            <div className="relative h-80">
              <img 
                src={selectedRecipe.image} 
                alt={selectedRecipe.title}
                className="w-full h-full object-cover"
              />
              <Button 
                variant="secondary" 
                size="icon"
                className="absolute top-4 right-4 rounded-full"
                onClick={() => setSelectedRecipe(null)}
              >
                <Icon name="X" size={20} />
              </Button>
            </div>
            <div className="p-8">
              <h2 className="text-4xl font-bold mb-4">{selectedRecipe.title}</h2>
              <div className="flex items-center gap-4 mb-6">
                <Badge className={`${getDifficultyColor(selectedRecipe.difficulty)} text-white`}>
                  {getDifficultyText(selectedRecipe.difficulty)}
                </Badge>
                <span className="flex items-center gap-2 text-gray-600">
                  <Icon name="Clock" size={20} />
                  {selectedRecipe.time} –º–∏–Ω—É—Ç
                </span>
                <Badge variant="secondary">{selectedRecipe.category}</Badge>
              </div>

              <div className="mb-8">
                <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                  <Icon name="ShoppingCart" size={24} className="text-primary" />
                  –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
                </h3>
                <ul className="space-y-2">
                  {selectedRecipe.ingredients.map((ingredient, idx) => (
                    <li key={idx} className="flex items-start gap-2">
                      <Icon name="Check" size={20} className="text-green-500 mt-0.5" />
                      <span>{ingredient}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <div>
                <h3 className="text-2xl font-bold mb-4 flex items-center gap-2">
                  <Icon name="Flame" size={24} className="text-primary" />
                  –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ
                </h3>
                <ol className="space-y-4">
                  {selectedRecipe.steps.map((step, idx) => (
                    <li key={idx} className="flex gap-4">
                      <span className="flex-shrink-0 w-8 h-8 rounded-full bg-primary text-primary-foreground flex items-center justify-center font-bold">
                        {idx + 1}
                      </span>
                      <p className="pt-1">{step}</p>
                    </li>
                  ))}
                </ol>
              </div>
            </div>
          </Card>
        </div>
      )}

      <section id="tips" className="py-16 px-4 bg-gradient-to-r from-primary/5 via-secondary/5 to-accent/5">
        <div className="container mx-auto max-w-6xl">
          <h2 className="text-4xl font-bold mb-12 text-center">–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Ö–∏—Ç—Ä–æ—Å—Ç–∏</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {tips.map((tip, index) => (
              <Card key={tip.id} className="p-6 hover-scale animate-fade-in" style={{ animationDelay: `${index * 0.1}s` }}>
                <div className="w-12 h-12 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center mb-4">
                  <Icon name="Lightbulb" size={24} className="text-white" />
                </div>
                <h3 className="text-xl font-bold mb-3">{tip.title}</h3>
                <p className="text-gray-600">{tip.text}</p>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <footer className="bg-gray-900 text-white py-12 px-4 mt-16">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-bold mb-4">üç≥ –ö—É–ª–∏–Ω–∞—Ä–Ω–∞—è –∫–Ω–∏–≥–∞</h2>
          <p className="text-gray-400 mb-6">–í–∫—É—Å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è</p>
          <div className="flex justify-center gap-6">
            <a href="#" className="text-gray-400 hover:text-white transition-colors">
              <Icon name="Instagram" size={24} />
            </a>
            <a href="#" className="text-gray-400 hover:text-white transition-colors">
              <Icon name="Facebook" size={24} />
            </a>
            <a href="#" className="text-gray-400 hover:text-white transition-colors">
              <Icon name="Youtube" size={24} />
            </a>
          </div>
          <p className="text-gray-500 text-sm mt-8">¬© 2024 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã</p>
        </div>
      </footer>
    </div>
  );
};

export default Index;
